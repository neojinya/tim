<div class="bg-slider">
  <form name="form" id="form"><p>時間給を入力してください</p>
    <select name="income_category" id="income">
      <option value="月給">月給</option>
      <option value="日給">日給</option>
      <option value="時給">時給</option>
      <input id="price" type="number" name = "num" puttern="[1-9][0-9]*">
    </select>

    <div id="div1">
      <input type="button" id="start" value="作業開始" >
    </div>
    <div id = "div2">
      <input type="button" onclick="location.reload()" value="リセット" />
    </div>
  </form>
<div class = "wagetext">
<%# 見出しは<h3>に文字列と、<h1>に計算結果が入ります。 %>
  <h3></h3>
  <h1 id="timeis"></h1>
  <h3 id="is"></h3>

  <script>
  // 時間給の初期値を定義
  let count = 0;
  // スタート、ストップボタンを切り替えるためにボタンの親ノードを取得
  let div1 = document.getElementById("div1");
  // スタートボタンのDOM要素をidで取得
  let button = document.getElementById("start");
  // 背景画像の最初のimageを表示するためにactivebgに0を代入
  activebg = 0
  // ここからボタンを押したら始まる関数
  var onclickstart = function(){
    // カウントをストップした時に表示するノードを取得
    document.querySelector("h3").innerHTML = "";
    // カウントをストップした時に表示するノードを取得
    document.getElementById("is").innerHTML = "";
    // 入力してもらった時間給を取得しnumberに代入
    let number = document.getElementById("price")
    // まずセレクトボックスのノードを取得
    var element = document.getElementById("income");
    // セレクトボックスの値を取り出し代入
    var element2 = element.value;
    // セレクトボックスの値によって計算式をわけ、numberを1秒分に分割しwageに代入
    switch (element2){
      case "月給":
        wage = number.value/23/8/60/60;
      break;
      case "日給":
        wage = number.value/8/60/60;
      break;
      case "時給":
        wage = number.value/60/60;
      break;
    }

    // 作業開始ボタンを削除して、その場所に新しく作業終了ボタンを作る
    start.parentNode.removeChild(start);  
    stop_btn = document.createElement("input");
    stop_btn.setAttribute("type","button");
    stop_btn.setAttribute("id","stop");
    stop_btn.setAttribute("value","作業終了");
    stop_btn.setAttribute("onclick","onclickstop()")
    div1.appendChild(stop_btn);

    // 作業終了ボタンを削除し、同じ場所に作業再開ボタンを作成する
    stop_btn.onclick=function(){ 
      clearInterval(counttime);
      stop_btn.parentNode.removeChild(stop_btn);
      start_btn = document.createElement("input");
      start_btn.setAttribute("type","button");
      start_btn.setAttribute("id","start");
      start_btn.setAttribute("value","作業再開");
      start_btn.setAttribute("onclick","onclickstart()")
      div1.appendChild(start_btn);
    }

    // 背景画像の遷移の関数
    jQuery(function($) {
      // 背景画像のスエードでの遷移をプラグインで設定。
    $('.bg-slider').bgSwitcher({
        images: ['75716959_480x466.jpg','IMG_7339.png','IMG_1765.png','publicdomainq-0032867psc.jpg','IMG_7808.jpg'], // 切り替える背景画像を指定
        loop: false,
        start: false,
        duration: 3000
});

});
  // ここで一度変数timeを定義し、関数timeのなかで計算と背景画像の遷移させる
  time();
  function time(){
  // 1秒分に分割された時間給をcountに代入し、ノードtimeisに¥単位で表示
  count = count + wage;
  document.getElementById("timeis").innerHTML = "¥"+count;
        
    // countが指定された範囲ごとで背景イメージを切り替えるif分
    if (1 <= count && count < 3){
      if (activebg===0){
      $(".bg-slider").bgswitcher("next");
      activebg = 1
      }
    }
    else if(3 <= count && count < 5){
      if (activebg===1){
      $(".bg-slider").bgswitcher("next");
      activebg = 2
      }
    }
    else if(5 <= count && count < 7){
      if (activebg===2){
      $(".bg-slider").bgswitcher("next");
      activebg = 3
      }
    }
  
}
// 関数timeを1秒ごとに繰り返す
counttime = setInterval(time,1000);

  // ストップボタンを押したら、h3要素にそれぞれ文字列が追加される。
  stop_btn.addEventListener("click",function(){
    document.querySelector("h3").innerHTML = "これまでの時間給は";
    document.getElementById("is").innerHTML = "です";
  });  
}
// 関数onclickstartはbottonのonclickで動くことを設定。
button.onclick = onclickstart;
</script>